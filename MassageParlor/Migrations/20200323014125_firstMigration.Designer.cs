// <auto-generated />
using System;
using MassageParlor.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MassageParlor.Migrations
{
    [DbContext(typeof(MassageParlorContext))]
    [Migration("20200323014125_firstMigration")]
    partial class firstMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MassageParlor.Entities.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5b1c2b4d-48c7-402a-80c3-cc796ad49c6b"),
                            FirstName = "Alex",
                            LastName = "Down"
                        },
                        new
                        {
                            Id = new Guid("d8663e5e-7494-4f81-8739-6e0de1bea7ee"),
                            FirstName = "Brandon",
                            LastName = "Ten"
                        });
                });

            modelBuilder.Entity("MassageParlor.Entities.EmployeeMassage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MassageId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("MassageId");

                    b.ToTable("MyProperty");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5b1c3c4d-48c7-402a-80c3-cc796ad49c6b"),
                            EmployeeId = new Guid("5b1c2b4d-48c7-402a-80c3-cc796ad49c6b"),
                            MassageId = new Guid("da2fd609-d754-4feb-8acd-c4f9ff13ba96")
                        },
                        new
                        {
                            Id = new Guid("1b3c3c4d-48c7-402a-80c3-cc796ad49c6b"),
                            EmployeeId = new Guid("5b1c2b4d-48c7-402a-80c3-cc796ad49c6b"),
                            MassageId = new Guid("da2fd609-d754-4feb-8acd-c4f9ff13ba96")
                        },
                        new
                        {
                            Id = new Guid("1b3c3c4d-48c7-402a-70c5-cc796ad49c6b"),
                            EmployeeId = new Guid("d8663e5e-7494-4f81-8739-6e0de1bea7ee"),
                            MassageId = new Guid("da2fd609-d754-4feb-8acd-c4f9ff13ba96")
                        });
                });

            modelBuilder.Entity("MassageParlor.Entities.Massage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Massages");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d28888e9-2ba9-473a-a40f-e38cb54f9b35"),
                            Description = "Swedish massage is a gentle type of full-body massage.",
                            Name = "Swedish"
                        },
                        new
                        {
                            Id = new Guid("da2fd609-d754-4feb-8acd-c4f9ff13ba96"),
                            Description = "Hot stone massage is best for people who have muscle pain and tension or who simply want to relax.",
                            Name = "Hot stone massage"
                        });
                });

            modelBuilder.Entity("MassageParlor.Entities.EmployeeMassage", b =>
                {
                    b.HasOne("MassageParlor.Entities.Employee", "Employee")
                        .WithMany("MassageServices")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MassageParlor.Entities.Massage", "Massage")
                        .WithMany("EmployeesThatPerformThis")
                        .HasForeignKey("MassageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
